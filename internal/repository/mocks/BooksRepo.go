// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	model "awesomeProject/internal/repository/books/model"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// BooksRepo is an autogenerated mock type for the BooksRepo type
type BooksRepo struct {
	mock.Mock
}

// InsertBook provides a mock function with given fields: ctx, book
func (_m *BooksRepo) InsertBook(ctx context.Context, book *model.Book) error {
	ret := _m.Called(ctx, book)

	if len(ret) == 0 {
		panic("no return value specified for InsertBook")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.Book) error); ok {
		r0 = rf(ctx, book)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewBooksRepo creates a new instance of BooksRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBooksRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *BooksRepo {
	mock := &BooksRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
